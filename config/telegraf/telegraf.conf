# Global tags - can be overridden by environment variables
[global_tags]
  environment = "${TELEGRAF_ENV:-production}"
  project = "hydroponic_monitor"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  logfile = ""
  omit_hostname = false

# --- MQTT -> Sensors (per-sensor JSON) ---
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  # Support both authenticated and anonymous access for test environments
  username = "${MQTT_PASS:+telegraf}"  # Only set username if MQTT_PASS is not empty
  password = "$MQTT_PASS"
  topics  = ["grow/tent/+/sensor/+/+/state"]
  qos = 0
  persistent_session = true
  client_id = "telegraf-grow-sensors"
  connection_timeout = "30s"
  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    measurement_name = "env"
    [[inputs.mqtt_consumer.json_v2.object]]
      path = ""
      timestamp_path   = "ts"
      timestamp_format = "2006-01-02T15:04:05Z07:00"
      tags   = ["unit"]
      field_paths = ["value", "accuracy"]

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "grow/!scope/!node/sensor/!type/!id/state"
    tags  = ["scope","node","type","id"]

# --- MQTT -> Actuator State (numeric 1/0) ---
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  # Support both authenticated and anonymous access for test environments
  username = "${MQTT_PASS:+telegraf}"  # Only set username if MQTT_PASS is not empty
  password = "$MQTT_PASS"
  topics  = ["grow/tent/+/actuator/+/+/state"]
  qos = 1
  persistent_session = true
  client_id = "telegraf-grow-actuators"
  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    measurement_name = "actuator_state"
    [[inputs.mqtt_consumer.json_v2.object]]
      path = ""
      timestamp_path   = "ts"
      timestamp_format = "2006-01-02T15:04:05Z07:00"
      field_paths = ["state", "level", "power_W", "request_id"]

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "grow/!scope/!node/actuator/!type/!id/state"
    tags  = ["scope","node","type","id"]

# --- MQTT -> Node Status (ONLINE/OFFLINE -> 1/0 -> node_status) ---
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  # Support both authenticated and anonymous access for test environments
  username = "${MQTT_PASS:+telegraf}"  # Only set username if MQTT_PASS is not empty
  password = "$MQTT_PASS"
  topics  = ["grow/tent/+/status"]
  qos = 1
  client_id = "telegraf-grow-status"
  data_format = "value"
  data_type   = "string"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "grow/!scope/!node/status"
    tags  = ["scope","node"]

# Map to numeric
[[processors.enum]]
  namepass = ["mqtt_consumer"]
  [[processors.enum.mapping]]
    field = "value"
    dest  = "online"
    default = 0
    [processors.enum.mapping.value_mappings]
      ONLINE  = 1
      OFFLINE = 0

# Rename measurement for clarity
[[processors.rename]]
  namepass = ["mqtt_consumer"]
  [[processors.rename.replace]]
    measurement = "node_status"

# Coerce online to integer (optional; enum already emits int)
[[processors.converter]]
  namepass = ["node_status"]
  [processors.converter.fields]
    integer = ["online"]

# Production: Sensors -> grow_raw
[[outputs.influxdb_v2]]
  urls = ["$INFLUX_URL"]
  token = "$INFLUX_TOKEN"
  organization = "$INFLUX_ORG"
  bucket = "grow_raw"
  namepass = ["env"]
  # Only use this output when TELEGRAF_ENV is not set to integration_test
  [outputs.influxdb_v2.tagdrop]
    environment = ["integration_test"]

# Production: Actuator state + node status -> grow_state
[[outputs.influxdb_v2]]
  urls = ["$INFLUX_URL"]
  token = "$INFLUX_TOKEN"
  organization = "$INFLUX_ORG"
  bucket = "grow_state"
  namepass = ["actuator_state","node_status"]
  # Only use this output when TELEGRAF_ENV is not set to integration_test
  [outputs.influxdb_v2.tagdrop]
    environment = ["integration_test"]

# Test: All data -> single test bucket (when environment=integration_test tag is present)
[[outputs.influxdb_v2]]
  urls = ["$INFLUX_URL"]
  token = "$INFLUX_TOKEN"
  organization = "$INFLUX_ORG"
  bucket = "test-bucket"
  # Only use this output when environment=integration_test tag is present
  [outputs.influxdb_v2.tagpass]
    environment = ["integration_test"]