name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Reuse the setup from existing copilot workflow
  setup:
    uses: ./.github/workflows/copilot-setup-steps.yml

  # Code quality checks
  analyze:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.9"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get dependencies
        run: flutter pub get

            - name: Check if formatting is needed
        id: check-format
        run: |
          # Check if any files need formatting
          if ! dart format --output none --set-exit-if-changed .; then
            echo "needs_format=true" >> $GITHUB_OUTPUT
          else
            echo "needs_format=false" >> $GITHUB_OUTPUT
          fi

      - name: Format code
        if: steps.check-format.outputs.needs_format == 'true'
        run: dart format .

      - name: Commit formatted code
        if: steps.check-format.outputs.needs_format == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ”§ Auto-format code with dart format"
            git remote set-url origin https://x-access-token:${{ secrets.WRITE_ACTION_SECRET }}@github.com/${{ github.repository }}
            git push
          fi

      - name: Comment on PR
        if: steps.check-format.outputs.needs_format == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ”§ Code has been automatically formatted with `dart format .`'
            })

      - name: Analyze code
        run: flutter analyze

  # Run tests
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.9"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

  # Build web version
  build-web:
    runs-on: ubuntu-latest
    needs: [analyze, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.9"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --no-tree-shake-icons

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30

  # Build Android debug APK
  build-android-debug:
    runs-on: ubuntu-latest
    needs: [analyze, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.9"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug
        continue-on-error: true  # May fail in CI due to Gradle issues

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: android-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 30
